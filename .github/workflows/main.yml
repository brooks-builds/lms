name: Yew Component Library
on: [push, pull_request]
jobs:
  lint:
    name: Cargo check and check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: cargo check
        run: touch .env && cargo check
        env:
            RUST_ENV: test
            GRAPHQL_URI: http://localhost:8081
            AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
            AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
            AUTH_REDIRECT_URI: ${{ secrets.AUTH_REDIRECT_URI }}
      - name: cargo clippy
        run: touch .env && cargo clippy
        env:
            RUST_ENV: test
            GRAPHQL_URI: http://localhost:8081
            AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
            AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
            AUTH_REDIRECT_URI: ${{ secrets.AUTH_REDIRECT_URI }}
      - name: check formatting
        run: touch .env && cargo fmt --check
        env:
            RUST_ENV: test
            GRAPHQL_URI: http://localhost:8081
            AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
            AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
            AUTH_REDIRECT_URI: ${{ secrets.AUTH_REDIRECT_URI }}
  test:
    timeout-minutes: 60
    name: Run Playwright tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: create env file
        run: touch .env
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: install playwright dependencies
        run: npm ci
      - name: install web server
        run: npm i -g lite-server
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: install component Library
        run: |
          cd ..
          git clone https://github.com/brooks-builds/ycl.git
      - name: build docker image
        run: docker build -t trunk .
      - name: run tests
        run: npx playwright test
        env:
          FRONTEND_URI: http://localhost:8082
          GRAPHQL_URI: http://localhost:8081/v1/graphql
          CI: true
          RUST_ENV: test
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH_REDIRECT_URI: ${{ secrets.AUTH_REDIRECT_URI }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    if: github.event_name == 'pull_request' && github.ref_name == 'main'
    name: deploy to production
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v3
      - name: install prerequisites
        run: |
          rustup target add wasm32-unknown-unknown
          cargo install --locked trunk
      - name: install component Library
        run: |
          cd ..
          git clone https://github.com/brooks-builds/ycl.git
      - name: build
        run: touch .env && trunk build --release
        env:
            RUST_ENV: production
            GRAPHQL_URI: ${{ secrets.GRAPHQL_API_URI }}
            AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
            AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
            AUTH_REDIRECT_URI: ${{ secrets.AUTH_REDIRECT_URI }}
      - name: deploy
        run: aws s3 sync dist ${{ secrets.DEPLOYMENT_URI }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
      - name: invalidate cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_ID }} --paths "/index.html"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
